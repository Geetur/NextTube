services:
  postgres:
    image: postgres:16
    container_name: media_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-media}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-media}"]
      interval: 5s
      timeout: 5s
      retries: 10
  worker:
    build:
      context: ../apps/worker
    container_name: media_worker
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/media # prevent choke on the DB URL format (psycopg2 vs SQLAlchemy style)
    depends_on:
      postgres: 
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../apps/worker:/app
    command: ["python","main.py"]


  redis:
    image: redis:7-alpine
    container_name: media_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio:latest
    container_name: media_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 20

  createbuckets:
    image: minio/mc:latest
    container_name: media_minio_mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin} &&
      mc mb -p local/media || true &&
      mc anonymous set download local/media &&
      sleep 2
      "
    restart: "no"

  api:
    build:
      context: ../apps/api
    container_name: media_api
    env_file:
      - ../.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ../apps/api:/app
    command: >
      /bin/sh -lc "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  web:
    build:
      context: ../apps/web
    container_name: media_web
    depends_on:
      - api
    ports:
      - "3000:3000"
    volumes:
      - ../apps/web:/app
      - /app/node_modules
    command: ["/bin/sh","-lc","npm install && npm run dev"]

volumes:
  pgdata:
  minio_data:
